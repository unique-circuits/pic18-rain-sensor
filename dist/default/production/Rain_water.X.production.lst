

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 16 05:14:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.05
    18                           ; Generated 20/12/2018 GMT
    19                           ; 
    20                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PORTCbits	set	3970
    52  0000                     _PORTB	set	3969
    53  0000                     _PORTDbits	set	3971
    54  0000                     _TRISD	set	3989
    55  0000                     _TRISC	set	3988
    56  0000                     _TRISB	set	3987
    57                           
    58                           	psect	smallconst
    59  000800                     __psmallconst:
    60                           	opt callstack 0
    61  000800  00                 	db	0
    62  000801                     STR_3:
    63  000801  20                 	db	32
    64  000802  20                 	db	32
    65  000803  20                 	db	32
    66  000804  20                 	db	32
    67  000805  20                 	db	32
    68  000806  20                 	db	32
    69  000807  20                 	db	32
    70  000808  20                 	db	32
    71  000809  20                 	db	32
    72  00080A  20                 	db	32
    73  00080B  20                 	db	32
    74  00080C  20                 	db	32
    75  00080D  20                 	db	32
    76  00080E  20                 	db	32
    77  00080F  20                 	db	32
    78  000810  20                 	db	32
    79  000811  00                 	db	0
    80  000812                     STR_1:
    81  000812  55                 	db	85	;'U'
    82  000813  6E                 	db	110	;'n'
    83  000814  69                 	db	105	;'i'
    84  000815  71                 	db	113	;'q'
    85  000816  75                 	db	117	;'u'
    86  000817  65                 	db	101	;'e'
    87  000818  20                 	db	32
    88  000819  43                 	db	67	;'C'
    89  00081A  69                 	db	105	;'i'
    90  00081B  72                 	db	114	;'r'
    91  00081C  63                 	db	99	;'c'
    92  00081D  75                 	db	117	;'u'
    93  00081E  69                 	db	105	;'i'
    94  00081F  74                 	db	116	;'t'
    95  000820  73                 	db	115	;'s'
    96  000821  00                 	db	0
    97  000822                     STR_2:
    98  000822  52                 	db	82	;'R'
    99  000823  61                 	db	97	;'a'
   100  000824  69                 	db	105	;'i'
   101  000825  6E                 	db	110	;'n'
   102  000826  20                 	db	32
   103  000827  44                 	db	68	;'D'
   104  000828  65                 	db	101	;'e'
   105  000829  74                 	db	116	;'t'
   106  00082A  65                 	db	101	;'e'
   107  00082B  63                 	db	99	;'c'
   108  00082C  74                 	db	116	;'t'
   109  00082D  65                 	db	101	;'e'
   110  00082E  64                 	db	100	;'d'
   111  00082F  00                 	db	0
   112                           
   113                           ; #config settings
   114  000830  00                 	db	0	; dummy byte at the end
   115  0000                     
   116                           	psect	cinit
   117  000958                     __pcinit:
   118                           	opt callstack 0
   119  000958                     start_initialization:
   120                           	opt callstack 0
   121  000958                     __initialization:
   122                           	opt callstack 0
   123                           
   124                           ; Clear objects allocated to COMRAM (2 bytes)
   125  000958  6A05               	clrf	(__pbssCOMRAM+1)& (0+255),c
   126  00095A  6A04               	clrf	__pbssCOMRAM& (0+255),c
   127  00095C                     end_of_initialization:
   128                           	opt callstack 0
   129  00095C                     __end_of__initialization:
   130                           	opt callstack 0
   131  00095C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   132  00095E  6EF8               	movwf	tblptru,c
   133  000960  0E08               	movlw	high __Lsmallconst
   134  000962  6EF7               	movwf	tblptrh,c
   135  000964  0100               	movlb	0
   136  000966  EF19  F004         	goto	_main	;jump to C main() function
   137                           
   138                           	psect	bssCOMRAM
   139  000004                     __pbssCOMRAM:
   140                           	opt callstack 0
   141  000004                     _i:
   142                           	opt callstack 0
   143  000004                     	ds	2
   144                           
   145                           	psect	cstackCOMRAM
   146  000001                     __pcstackCOMRAM:
   147                           	opt callstack 0
   148  000001                     cmd@a:
   149                           	opt callstack 0
   150  000001                     dat@b:
   151                           	opt callstack 0
   152                           
   153                           ; 1 bytes @ 0x0
   154  000001                     	ds	1
   155  000002                     show@s:
   156                           	opt callstack 0
   157                           
   158                           ; 2 bytes @ 0x1
   159  000002                     	ds	2
   160  000004                     
   161                           ; 1 bytes @ 0x3
   162 ;;
   163 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   164 ;;
   165 ;; *************** function _main *****************
   166 ;; Defined at:
   167 ;;		line 99 in file "main.c"
   168 ;; Parameters:    Size  Location     Type
   169 ;;		None
   170 ;; Auto vars:     Size  Location     Type
   171 ;;		None
   172 ;; Return value:  Size  Location     Type
   173 ;;                  1    wreg      void 
   174 ;; Registers used:
   175 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   176 ;; Tracked objects:
   177 ;;		On entry : 0/0
   178 ;;		On exit  : 0/0
   179 ;;		Unchanged: 0/0
   180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   181 ;;      Params:         0       0       0       0       0       0       0       0       0
   182 ;;      Locals:         0       0       0       0       0       0       0       0       0
   183 ;;      Temps:          0       0       0       0       0       0       0       0       0
   184 ;;      Totals:         0       0       0       0       0       0       0       0       0
   185 ;;Total ram usage:        0 bytes
   186 ;; Hardware stack levels required when called:    2
   187 ;; This function calls:
   188 ;;		_cmd
   189 ;;		_lcd_init
   190 ;;		_show
   191 ;; This function is called by:
   192 ;;		Startup code after reset
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           	psect	text0
   197  000832                     __ptext0:
   198                           	opt callstack 0
   199  000832                     _main:
   200                           	opt callstack 29
   201                           
   202                           ;main.c: 102:     TRISB = 0x0;
   203                           
   204                           ;incstack = 0
   205  000832  0E00               	movlw	0
   206  000834  6E93               	movwf	3987,c	;volatile
   207                           
   208                           ;main.c: 103:     TRISC = 0x0;
   209  000836  0E00               	movlw	0
   210  000838  6E94               	movwf	3988,c	;volatile
   211                           
   212                           ;main.c: 104:     TRISD = 0x01;
   213  00083A  0E01               	movlw	1
   214  00083C  6E95               	movwf	3989,c	;volatile
   215                           
   216                           ;main.c: 107:     lcd_init();
   217  00083E  EC9F  F004         	call	_lcd_init	;wreg free
   218                           
   219                           ;main.c: 108:     show("Unique Circuits");
   220  000842  0E12               	movlw	low STR_1
   221  000844  6E02               	movwf	show@s,c
   222  000846  0E08               	movlw	high STR_1
   223  000848  6E03               	movwf	show@s+1,c
   224  00084A  EC8A  F004         	call	_show	;wreg free
   225                           
   226                           ;main.c: 109:     cmd(0xc0);
   227  00084E  0EC0               	movlw	192
   228  000850  EC73  F004         	call	_cmd
   229  000854                     l829:
   230                           
   231                           ;main.c: 111:         if(PORTDbits.RD0 == 0) {
   232  000854  B083               	btfsc	3971,0,c	;volatile
   233  000856  D018               	goto	l845
   234                           
   235                           ;main.c: 112:             cmd(0xc0);
   236  000858  0EC0               	movlw	192
   237  00085A  EC73  F004         	call	_cmd
   238                           
   239                           ;main.c: 113:             show("Rain Detected");
   240  00085E  0E22               	movlw	low STR_2
   241  000860  6E02               	movwf	show@s,c
   242  000862  0E08               	movlw	high STR_2
   243  000864  6E03               	movwf	show@s+1,c
   244  000866  EC8A  F004         	call	_show	;wreg free
   245                           
   246                           ;main.c: 114:             for(i=0;i<1000;i++);
   247  00086A  0E00               	movlw	0
   248  00086C  6E05               	movwf	_i+1,c
   249  00086E  0E00               	movlw	0
   250  000870  6E04               	movwf	_i,c
   251  000872                     l837:
   252  000872  BE05               	btfsc	_i+1,7,c
   253  000874  D006               	goto	l841
   254  000876  0EE8               	movlw	232
   255  000878  5C04               	subwf	_i,w,c
   256  00087A  0E03               	movlw	3
   257  00087C  5805               	subwfb	_i+1,w,c
   258  00087E  B0D8               	btfsc	status,0,c
   259  000880  D7E9               	goto	l829
   260  000882                     l841:
   261  000882  4A04               	infsnz	_i,f,c
   262  000884  2A05               	incf	_i+1,f,c
   263  000886  D7F5               	goto	l837
   264  000888                     l845:
   265                           
   266                           ;main.c: 116:             cmd(0xc0);
   267  000888  0EC0               	movlw	192
   268  00088A  EC73  F004         	call	_cmd
   269                           
   270                           ;main.c: 117:             show("                ");
   271  00088E  0E01               	movlw	low STR_3
   272  000890  6E02               	movwf	show@s,c
   273  000892  0E08               	movlw	high STR_3
   274  000894  6E03               	movwf	show@s+1,c
   275  000896  EC8A  F004         	call	_show	;wreg free
   276                           
   277                           ;main.c: 118:             for(i=0;i<1000;i++);
   278  00089A  0E00               	movlw	0
   279  00089C  6E05               	movwf	_i+1,c
   280  00089E  0E00               	movlw	0
   281  0008A0  6E04               	movwf	_i,c
   282  0008A2                     l851:
   283  0008A2  BE05               	btfsc	_i+1,7,c
   284  0008A4  D006               	goto	l855
   285  0008A6  0EE8               	movlw	232
   286  0008A8  5C04               	subwf	_i,w,c
   287  0008AA  0E03               	movlw	3
   288  0008AC  5805               	subwfb	_i+1,w,c
   289  0008AE  B0D8               	btfsc	status,0,c
   290  0008B0  D7D1               	goto	l829
   291  0008B2                     l855:
   292  0008B2  4A04               	infsnz	_i,f,c
   293  0008B4  2A05               	incf	_i+1,f,c
   294  0008B6  D7F5               	goto	l851
   295  0008B8                     __end_of_main:
   296                           	opt callstack 0
   297                           
   298 ;; *************** function _show *****************
   299 ;; Defined at:
   300 ;;		line 151 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;  s               2    1[COMRAM] PTR unsigned char 
   303 ;;		 -> STR_3(17), STR_2(14), STR_1(16), 
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         2       0       0       0       0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0
   318 ;;      Totals:         2       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        2 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; Hardware stack levels required when called:    1
   322 ;; This function calls:
   323 ;;		_dat
   324 ;; This function is called by:
   325 ;;		_main
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text1
   330  000914                     __ptext1:
   331                           	opt callstack 0
   332  000914                     _show:
   333                           	opt callstack 29
   334                           
   335                           ;main.c: 151: void show(unsigned char *s);main.c: 152: {;main.c: 153:     while(*s)
   336                           
   337                           ;incstack = 0
   338  000914  D00A               	goto	l819
   339  000916                     l815:
   340                           
   341                           ;main.c: 154:     {;main.c: 155:         dat(*s++);
   342  000916  C002  FFF6         	movff	show@s,tblptrl
   343  00091A  C003  FFF7         	movff	show@s+1,tblptrh
   344  00091E                     	if	0	;tblptru may be non-zero
   345  00091E                     	endif
   346  00091E                     	if	0	;tblptru may be non-zero
   347  00091E                     	endif
   348  00091E  0008               	tblrd		*
   349  000920  50F5               	movf	tablat,w,c
   350  000922  EC5C  F004         	call	_dat
   351  000926  4A02               	infsnz	show@s,f,c
   352  000928  2A03               	incf	show@s+1,f,c
   353  00092A                     l819:
   354                           
   355                           ;main.c: 153:     while(*s)
   356  00092A  C002  FFF6         	movff	show@s,tblptrl
   357  00092E  C003  FFF7         	movff	show@s+1,tblptrh
   358  000932                     	if	0	;tblptru may be non-zero
   359  000932                     	endif
   360  000932                     	if	0	;tblptru may be non-zero
   361  000932                     	endif
   362  000932  0008               	tblrd		*
   363  000934  50F5               	movf	tablat,w,c
   364  000936  0900               	iorlw	0
   365  000938  B4D8               	btfsc	status,2,c
   366  00093A  0012               	return	
   367  00093C  D7EC               	goto	l815
   368  00093E                     __end_of_show:
   369                           	opt callstack 0
   370                           
   371 ;; *************** function _dat *****************
   372 ;; Defined at:
   373 ;;		line 141 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;  b               1    wreg     unsigned char 
   376 ;; Auto vars:     Size  Location     Type
   377 ;;  b               1    0[COMRAM] unsigned char 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   387 ;;      Params:         0       0       0       0       0       0       0       0       0
   388 ;;      Locals:         1       0       0       0       0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0       0       0       0       0
   390 ;;      Totals:         1       0       0       0       0       0       0       0       0
   391 ;;Total ram usage:        1 bytes
   392 ;; Hardware stack levels used:    1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_show
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text2
   401  0008B8                     __ptext2:
   402                           	opt callstack 0
   403  0008B8                     _dat:
   404                           	opt callstack 29
   405                           
   406                           ;incstack = 0
   407                           ;dat@b stored from wreg
   408  0008B8  6E01               	movwf	dat@b,c
   409                           
   410                           ;main.c: 141: void dat(unsigned char b);main.c: 142: {;main.c: 143:     PORTB=b;
   411  0008BA  C001  FF81         	movff	dat@b,3969	;volatile
   412                           
   413                           ;main.c: 144:     PORTCbits.RC0=1;
   414  0008BE  8082               	bsf	3970,0,c	;volatile
   415                           
   416                           ;main.c: 145:     PORTCbits.RC1=0;
   417  0008C0  9282               	bcf	3970,1,c	;volatile
   418                           
   419                           ;main.c: 146:     PORTCbits.RC2=1;
   420  0008C2  8482               	bsf	3970,2,c	;volatile
   421                           
   422                           ;main.c: 147:     for(i=0;i<1000;i++);
   423  0008C4  0E00               	movlw	0
   424  0008C6  6E05               	movwf	_i+1,c
   425  0008C8  0E00               	movlw	0
   426  0008CA  6E04               	movwf	_i,c
   427  0008CC                     l757:
   428  0008CC  BE05               	btfsc	_i+1,7,c
   429  0008CE  D006               	goto	l761
   430  0008D0  0EE8               	movlw	232
   431  0008D2  5C04               	subwf	_i,w,c
   432  0008D4  0E03               	movlw	3
   433  0008D6  5805               	subwfb	_i+1,w,c
   434  0008D8  B0D8               	btfsc	status,0,c
   435  0008DA  D003               	goto	l46
   436  0008DC                     l761:
   437  0008DC  4A04               	infsnz	_i,f,c
   438  0008DE  2A05               	incf	_i+1,f,c
   439  0008E0  D7F5               	goto	l757
   440  0008E2                     l46:
   441                           
   442                           ;main.c: 148:     PORTCbits.RC2=0;
   443  0008E2  9482               	bcf	3970,2,c	;volatile
   444  0008E4  0012               	return		;funcret
   445  0008E6                     __end_of_dat:
   446                           	opt callstack 0
   447                           
   448 ;; *************** function _lcd_init *****************
   449 ;; Defined at:
   450 ;;		line 123 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2, status,0, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   464 ;;      Params:         0       0       0       0       0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0       0       0       0       0
   467 ;;      Totals:         0       0       0       0       0       0       0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels used:    1
   470 ;; Hardware stack levels required when called:    1
   471 ;; This function calls:
   472 ;;		_cmd
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text3
   479  00093E                     __ptext3:
   480                           	opt callstack 0
   481  00093E                     _lcd_init:
   482                           	opt callstack 29
   483                           
   484                           ;main.c: 125:     cmd(0x38);
   485                           
   486                           ;incstack = 0
   487  00093E  0E38               	movlw	56
   488  000940  EC73  F004         	call	_cmd
   489                           
   490                           ;main.c: 126:     cmd(0x0c);
   491  000944  0E0C               	movlw	12
   492  000946  EC73  F004         	call	_cmd
   493                           
   494                           ;main.c: 127:     cmd(0x06);
   495  00094A  0E06               	movlw	6
   496  00094C  EC73  F004         	call	_cmd
   497                           
   498                           ;main.c: 128:     cmd(0x80);
   499  000950  0E80               	movlw	128
   500  000952  EC73  F004         	call	_cmd
   501  000956  0012               	return		;funcret
   502  000958                     __end_of_lcd_init:
   503                           	opt callstack 0
   504                           
   505 ;; *************** function _cmd *****************
   506 ;; Defined at:
   507 ;;		line 131 in file "main.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;  a               1    wreg     unsigned char 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  a               1    0[COMRAM] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   521 ;;      Params:         0       0       0       0       0       0       0       0       0
   522 ;;      Locals:         1       0       0       0       0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0
   524 ;;      Totals:         1       0       0       0       0       0       0       0       0
   525 ;;Total ram usage:        1 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_main
   531 ;;		_lcd_init
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text4
   536  0008E6                     __ptext4:
   537                           	opt callstack 0
   538  0008E6                     _cmd:
   539                           	opt callstack 29
   540                           
   541                           ;incstack = 0
   542                           ;cmd@a stored from wreg
   543  0008E6  6E01               	movwf	cmd@a,c
   544                           
   545                           ;main.c: 131: void cmd(unsigned char a);main.c: 132: {;main.c: 133:     PORTB=a;
   546  0008E8  C001  FF81         	movff	cmd@a,3969	;volatile
   547                           
   548                           ;main.c: 134:     PORTCbits.RC0=0;
   549  0008EC  9082               	bcf	3970,0,c	;volatile
   550                           
   551                           ;main.c: 135:     PORTCbits.RC1=0;
   552  0008EE  9282               	bcf	3970,1,c	;volatile
   553                           
   554                           ;main.c: 136:     PORTCbits.RC2=1;
   555  0008F0  8482               	bsf	3970,2,c	;volatile
   556                           
   557                           ;main.c: 137:     for(i=0;i<1000;i++);
   558  0008F2  0E00               	movlw	0
   559  0008F4  6E05               	movwf	_i+1,c
   560  0008F6  0E00               	movlw	0
   561  0008F8  6E04               	movwf	_i,c
   562  0008FA                     l739:
   563  0008FA  BE05               	btfsc	_i+1,7,c
   564  0008FC  D006               	goto	l743
   565  0008FE  0EE8               	movlw	232
   566  000900  5C04               	subwf	_i,w,c
   567  000902  0E03               	movlw	3
   568  000904  5805               	subwfb	_i+1,w,c
   569  000906  B0D8               	btfsc	status,0,c
   570  000908  D003               	goto	l41
   571  00090A                     l743:
   572  00090A  4A04               	infsnz	_i,f,c
   573  00090C  2A05               	incf	_i+1,f,c
   574  00090E  D7F5               	goto	l739
   575  000910                     l41:
   576                           
   577                           ;main.c: 138:     PORTCbits.RC2=0;
   578  000910  9482               	bcf	3970,2,c	;volatile
   579  000912  0012               	return		;funcret
   580  000914                     __end_of_cmd:
   581                           	opt callstack 0
   582                           
   583                           	psect	rparam
   584  0000                     tosu	equ	0xFFF
   585                           tosh	equ	0xFFE
   586                           tosl	equ	0xFFD
   587                           stkptr	equ	0xFFC
   588                           pclatu	equ	0xFFB
   589                           pclath	equ	0xFFA
   590                           pcl	equ	0xFF9
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           prodh	equ	0xFF4
   596                           prodl	equ	0xFF3
   597                           indf0	equ	0xFEF
   598                           postinc0	equ	0xFEE
   599                           postdec0	equ	0xFED
   600                           preinc0	equ	0xFEC
   601                           plusw0	equ	0xFEB
   602                           fsr0h	equ	0xFEA
   603                           fsr0l	equ	0xFE9
   604                           wreg	equ	0xFE8
   605                           indf1	equ	0xFE7
   606                           postinc1	equ	0xFE6
   607                           postdec1	equ	0xFE5
   608                           preinc1	equ	0xFE4
   609                           plusw1	equ	0xFE3
   610                           fsr1h	equ	0xFE2
   611                           fsr1l	equ	0xFE1
   612                           bsr	equ	0xFE0
   613                           indf2	equ	0xFDF
   614                           postinc2	equ	0xFDE
   615                           postdec2	equ	0xFDD
   616                           preinc2	equ	0xFDC
   617                           plusw2	equ	0xFDB
   618                           fsr2h	equ	0xFDA
   619                           fsr2l	equ	0xFD9
   620                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[14]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_show
    _show->_dat
    _lcd_init->_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     318
                                _cmd
                           _lcd_init
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     0      2     288
                                              1 COMRAM     2     0      2
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_init
     _cmd
   _show
     _dat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      3       5       1        5.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      20        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 16 05:14:58 2019

                      _i 0004                       l41 0910                       l46 08E2  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l743 090A                      l815 0916                      l761 08DC  
                    l841 0882                      l739 08FA                      l819 092A  
                    l851 08A2                      l757 08CC                      l837 0872  
                    l845 0888                      l829 0854                      l855 08B2  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      _dat 08B8  
                    _cmd 08E6             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     ?_dat 0001                     ?_cmd 0001  
                   STR_1 0812                     STR_2 0822                     STR_3 0801  
                   dat@b 0001                     cmd@a 0001                     _main 0832  
                   _show 0914                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ??_dat 0001  
                  ??_cmd 0001            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001                    ?_show 0002                    _PORTB 000F81  
          __CFG_USBDIV$1 000000                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  tablat 000FF5                    show@s 0002                    status 000FD8  
         __CFG_ICPRT$OFF 000000          __initialization 0958             __end_of_main 08B8  
           __end_of_show 093E                   ??_main 0004                   ??_show 0004  
          __activetblptr 000001           __CFG_XINST$OFF 000000         __end_of_lcd_init 0958  
         __CFG_STVREN$ON 000000             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 095C          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_lcd_init 0001          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0958                  __ramtop 0800                  __ptext0 0832  
                __ptext1 0914                  __ptext2 08B8                  __ptext3 093E  
                __ptext4 08E6             __size_of_dat 002E             __size_of_cmd 002E  
             ??_lcd_init 0002     end_of_initialization 095C                _PORTCbits 000F82  
              _PORTDbits 000F83      start_initialization 0958              __end_of_dat 08E6  
            __end_of_cmd 0914         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0004  
      __size_of_lcd_init 001A              __smallconst 0800         __CFG_WDTPS$32768 000000  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
               _lcd_init 093E            __size_of_main 0086            __size_of_show 002A  
  __CFG_CPUDIV$OSC1_PLL2 000000  
